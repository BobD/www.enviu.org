@mixin links(){

  a{
    text-decoration: none;
    text-transform: capitalize;
    color: inherit;
    // transition: color 0.05s;

    &:hover{
      color: $black;
    }
  }

	&[class$="active"]{
		color: $black;
	}
}

// http://www.mademyday.de/css-height-equals-width-with-pure-css.html
@mixin box-ratio($ratio: $box-ratio, $content: '.box__content'){
  position: relative;
  
  &:before {
      display: block;
      content: "";
      width: 100%;
      padding-top: $ratio;
  }

  > #{$content}{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


// ----
// http://www.sitepoint.com/managing-responsive-breakpoints-sass/
// http://sassmeister.com/gist/0614ac3971ae82925ef4
// ----
@mixin respond-to($name, $push: false) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{map-get($breakpoints, $name)} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  // But $push is defined
  @else if $push != false {
    // Add the new breakpoint to the map
    $breakpoints: map-merge($breakpoints, ($name: $push)) !global;
    // And re-call the mixin normally
    @include respond-to($name) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  // And there is no push
  @else {
    // Just warn the user
    @warn "Unfortunately, no value could be retrieved from `#{$name}`. "
        + "Please make sure it is defined in `$breakpoints` map. "
        + "Or pass the media query as a second parameter to add it to the map.";
  }
}
